<Project TreatAsLocalProperty="
         Hagar_ArgsFile;
         Hagar_CodeGenDirectory;
         Hagar_CodeGeneratorEnabled;
         Hagar_DotNetHost;
         Hagar_FullAssembly;
         Hagar_GeneratorAssembly;
         Hagar_MSBuildIsCore;
         Hagar_OutputFileName;
         Hagar_TaskAssembly;">

  <PropertyGroup>
    <!-- Specify the assembly containing the MSBuild tasks. -->
    <Hagar_MSBuildIsCore Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(OS)' != 'Windows_NT'">true</Hagar_MSBuildIsCore>
    <Hagar_TaskAssembly Condition=" '$(HagarCodeGenTaskAssembly)' != '' ">$(HagarCodeGenTaskAssembly)</Hagar_TaskAssembly>
    <Hagar_TaskAssembly Condition=" '$(Hagar_TaskAssembly)' == '' and '$(Hagar_MSBuildIsCore)' == 'true'">$(MSBuildThisFileDirectory)..\tasks\netcoreapp3.1\Hagar.CodeGenerator.MSBuild.Tasks.dll</Hagar_TaskAssembly>

    <!-- When the MSBuild host is full-framework, we defer to PATH for dotnet -->
    <Hagar_DotNetHost Condition="'$(DotNetFromPath)' == 'true'">dotnet</Hagar_DotNetHost>
    <Hagar_DotNetHost Condition="'$(Hagar_MSBuildIsCore)' != 'true'">dotnet</Hagar_DotNetHost>
    <Hagar_DotNetHost Condition="'$(DotNetHost)' != ''">$(DotNetHost)</Hagar_DotNetHost>

    <!-- Specify the assembly containing the code generator. -->
    <Hagar_GeneratorAssembly Condition="'$(HagarCodeGenCoreAssembly)' != ''">$(HagarCodeGenCoreAssembly)</Hagar_GeneratorAssembly>
    <Hagar_GeneratorAssembly Condition="'$(Hagar_GeneratorAssembly)' == ''">$(MSBuildThisFileDirectory)..\tasks\netcoreapp3.1\Hagar.CodeGenerator.MSBuild.dll</Hagar_GeneratorAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <HagarCodeGenLogLevel Condition="'$(HagarCodeGenLogLevel)' == ''">Warning</HagarCodeGenLogLevel>
    <Hagar_CodeGenDirectory Condition="'$([System.IO.Path]::IsPathRooted($(IntermediateOutputPath)))' == 'true'">$(IntermediateOutputPath)</Hagar_CodeGenDirectory>
    <Hagar_CodeGenDirectory Condition="'$(Hagar_CodeGenDirectory)' == ''">$(ProjectDir)$(IntermediateOutputPath)</Hagar_CodeGenDirectory>
    <Hagar_OutputFileName>$(Hagar_CodeGenDirectory)$(TargetName).hagar.g.cs</Hagar_OutputFileName>
    <Hagar_CodeGeneratorEnabled Condition="'$(DesignTimeBuild)' != 'true'">true</Hagar_CodeGeneratorEnabled>
    <Hagar_ArgsFile>$(Hagar_CodeGenDirectory)$(TargetName).hagar.g.args.txt</Hagar_ArgsFile>
    <HagarGenerateCodeDependsOn>$(HagarGenerateCodeDependsOn);ResolveReferences;HagarGenerateInputCache</HagarGenerateCodeDependsOn>
  </PropertyGroup>

  <!--
    Input to the code generator should not include its output.
  -->
  <ItemGroup>
    <Hagar_CodeGenInputs Include="@(Compile);@(ReferencePath)" />
    <Hagar_CodeGenInputs Remove="$(Hagar_OutputFileName)" />
  </ItemGroup>

  <!-- Properties used to support correct, incremental builds. -->
  <PropertyGroup>
    <!--
        Since the Hagar code generator also affects the state of @(Compile) and hence the compile inputs file,
        we maintain a separate cache with Hagar' own files removed. Otherwise there would be a circular dependency
        whereby the cache updates and triggers the code generator, which triggers a cache update.
    -->
    <Hagar_CodeGenInputCache>$(IntermediateOutputPath)$(MSBuildProjectFile).HagarCodeGenInputs.cache</Hagar_CodeGenInputCache>
  </PropertyGroup>

  <!--
      Update the file which captures the total set of all inputs to the code generator.
      This is based on the _GenerateCompileDependencyCache target from the .NET project system.
  -->
  <Target
    Name="HagarGenerateInputCache"
    DependsOnTargets="ResolveAssemblyReferences"
    BeforeTargets="HagarGenerateCode"
    Inputs="$(Hagar_CodeGenInputs)"
    Outputs="$(Hagar_CodeGenInputCache)">

    <Hash ItemsToHash="@(Hagar_CodeGenInputs)">
      <Output TaskParameter="HashResult" PropertyName="Hagar_UpdatedInputCacheContents" />
    </Hash>

    <WriteLinesToFile Overwrite="true" File="$(Hagar_CodeGenInputCache)" Lines="$(Hagar_UpdatedInputCacheContents)" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(Hagar_CodeGenInputCache)" />
    </ItemGroup>

  </Target>

  <UsingTask TaskName="Hagar.CodeGenerator.MSBuild.Tasks.GetDotNetHost" AssemblyFile="$(Hagar_TaskAssembly)" Condition="'$(Hagar_CodeGeneratorEnabled)' == 'true' and '$(Hagar_DotNetHost)' == '' and '$(Hagar_MSBuildIsCore)' == 'true'" />

  <Target Name="HagarGenerateCode"
          DependsOnTargets="$(HagarGenerateCodeDependsOn)"
          AfterTargets="HagarGenerateInputCache"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(Hagar_CodeGeneratorEnabled)' == 'true'"
          Inputs="@(Compile);@(Reference);$(Hagar_CodeGenInputCache)"
          Outputs="$(Hagar_OutputFileName)">

    <ItemGroup>
      <Hagar_CodeGenArgs Include="WaitForDebugger" Condition="'$(HagarCodeGenWaitForDebugger)' != ''" />
      <Hagar_CodeGenArgs Include="LogLevel:$(HagarCodeGenLogLevel)" />
      <Hagar_CodeGenArgs Include="ProjectPath:$(MSBuildProjectFullPath)"/>
      <Hagar_CodeGenArgs Include="ProjectGuid:$(ProjectGuid)"/>
      <Hagar_CodeGenArgs Include="OutputType:$(OutputType)"/>
      <Hagar_CodeGenArgs Include="TargetPath:$(TargetPath)"/>
      <Hagar_CodeGenArgs Include="CodeGenOutputFile:$(Hagar_OutputFileName)"/>
      <Hagar_CodeGenArgs Include="IdAttributeTypes:$(HagarIdAttributeTypes)" Condition="'$(HagarIdAttributeTypes)' != ''"/>
      <Hagar_CodeGenArgs Include="@(Compile -> 'Compile:%(FullPath)')"/>
      <Hagar_CodeGenArgs Include="@(ReferencePath -> 'Reference:%(FullPath)')"/>
    </ItemGroup>

    <Message Text="[Hagar.CodeGenerator] - CodeGen arguments file=$(Hagar_ArgsFile)"/>
    <WriteLinesToFile Overwrite="true" File="$(Hagar_ArgsFile)" Lines="@(Hagar_CodeGenArgs)"/>

    <Hagar.CodeGenerator.MSBuild.Tasks.GetDotNetHost Condition="'$(Hagar_DotNetHost)' == '' and '$(Hagar_MSBuildIsCore)' == 'true' ">
      <Output TaskParameter="DotNetHost" PropertyName="Hagar_DotNetHost" />
    </Hagar.CodeGenerator.MSBuild.Tasks.GetDotNetHost>

    <!-- If building on .NET Core, use dotnet to execute the process. -->
    <Exec Command="&quot;$(Hagar_DotNetHost)&quot; &quot;$(Hagar_GeneratorAssembly)&quot; &quot;$(Hagar_ArgsFile)&quot;" Outputs="$(Hagar_OutputFileName)" />

    <ItemGroup>
      <Compile Include="$(Hagar_OutputFileName)" Condition="Exists('$(Hagar_OutputFileName)')" />
      <FileWrites Include="$(Hagar_OutputFileName)" Condition="Exists('$(Hagar_OutputFileName)')"/>
    </ItemGroup>
  </Target>

  <Target Name="HagarIncludeCodegenOutputDuringDesignTimeBuild"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(Hagar_CodeGeneratorEnabled)' != 'true' and Exists('$(Hagar_OutputFileName)')">
    <ItemGroup>
      <Compile Include="$(Hagar_OutputFileName)"/>
      <FileWrites Include="$(Hagar_OutputFileName)"/>
    </ItemGroup>
  </Target>
</Project>